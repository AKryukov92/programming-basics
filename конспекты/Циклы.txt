Циклы используются для повторения каких либо действий несколько раз.
Для каждого цикла нужно сформулировать условие: в каком случае нам нужно выполнять тело цикла.
Итерация цикла - одно повторение тела цикла.
В разных языках программирования циклы оформляются похожим образом.

while() { //Условие продолжения работы
	//Выполняемые действия
}

На практике циклы используются:
* для перебора значений в каком то интервале. Например от A до B.
* для выполнения какого то действия N раз.
В любом случае потребуется дополнительная переменная - счетчик.
Обычно счетчики называются i, j.

Пример перебора значений в интервале от A до B (A <= B).
Счетчик хранит перебираемое значение.
int i = a; //В счетчик нужно записать начало интервала
while(i < b) {// Цикл нужно выполнять пока счетчик в пределах интервала
	//Выполняемые действия
	i++; // Переход к следующему числу интервала
}

Пример выполнения действия N раз.
Счетчик значит "сколько раз действие было сделано".
int i = 0; //Пока цикл не начал работу, действие не было сделано ни разу
while(i < n) { //Цикл нужно выполнять пока действие не будет сделано n раз
	//Выполняемые действия
	i++; //Действие сделано на 1 раз больше
}

Циклы могут работать в прямом порядке (от A до B) и в обратном порядке (от B до A).
Пример перебора значений в интервале от A до B (A <= B) в обратном порядке.
int i = b; //В счетчик нужно записать _конец_ интервала
while(i >= a) {// Цикл нужно выполнять пока счетчик в пределах интервала
	//Выполняемые действия
	i--; // Переход к _предыдущему_ числу интервала
}

Одна из распространенных проблем - бесконечные циклы.
Программа при этом безостановочно выполняет тело цикла.
Причина такого поведения - условие, которое всегда истинно.
Для исправления нужно проверить:
* Правильно ли написано условие цикла
* Всегда ли увеличивается счетчик (или уменьшается - для циклов в обратном порядке)

Переменная это часть памяти, которая хранит значение.
Тип переменной определяет значения, которые она может хранить.
Переменные могут хранить:
* Целые числа
* Дробные числа
* Логические значения (истина или ложь)
* Символы
* Составные типы данных
Объявление переменной - команда, при которой компьютер выделяет память для хранения значения.
<Пример оформления на языке>
Инициализация переменной - команда, при которой компьютер записывает значение в переменную.
Способы инициализации переменных:
* явное указание в коде программы
* получение значений из консоли
* получение значений из файла
* другие способы
С переменными можно работать только когда они объявлены и инициализированы.
При использовании необъявленной переменной возникнет ошибка компиляции.
При использовании неинициализированной переменной возникнет ошибка выполнения.
Если среда разработки находит такие случае, то она отмечает проблемное место в коде и пишет сообщение об ошибке в специальный список.

Область видимости переменной - это участок кода, в котором компьютер может работать с переменной.
Область видимости начинается с места объявления этой переменной.
static void Main(string[] args)
{
	a = 5; //Тут будет ошибка компиляции
	int a; //Область видимости начинается в этом месте
	a = 7; //Корректная команда
}
Как правило область видимости существует в пределах ближайших фигурных скобок.
static void Main(string[] args)
{
	int a; 		//Область видимости начинается в этом месте
	a = 7; 		//Корректная команда
	if (a == 7) {
		b = 13; //Тут будет ошибка компиляции
		int b; 	//Область видимости переменной b начинается в этом месте
		b = 11; //Корректная команда
	}			//и заканчивается тут
	b = 17;		//Тут будет ошибка компиляции
}
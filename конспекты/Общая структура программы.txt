Программа - последовательное описание (на формальном языке) процесса обработки информации для решения какой-либо задачи на ЭВМ.

Исполнитель - человек или автомат (в частности, процессор компьютера), умеющий выполнять определённый набор действий. Исполнителя хаpактеpизуют сpеда, элементаpные действия, система команд, отказы.
Если исполнитель не может выполнить команду, то происходит ошибка выполнения.

Компиляция - процесс перевода исходного кода программы на формальном языке в программу на языке исполнителя.
Компилятор - инструмент для компиляции программы.
Среда разработки - инструмент для написания исходного кода программы.
Если компилятор не может перевести исходный код программы на язык исполнителя, то он сообщает обо всех найденных ошибках компиляции.
Среда разработки оформляет эти сообщения в понятный для человека вид.

Программа состоит из следующих частей:
1 Подготовка к работе
4 Объявление и инициализация переменных для работы
6 Получение данных
7 Проверка данных
5 Выполнение действий для решения задачи
3 Вывод результата
2 Завершение работы

Подготовка к работе включает в себя:
* подключение модулей: пакетов, библиотек, заголовочных файлов
* описание точки входа в программу
* подготовка модулей к работе

Модули это готовые части программы, которые можно использовать при решении задач.
Если использовать модуль, но не подключить его, то возникнет ошибка компиляции.
При завершении работы некоторые модули нужно отключить. 
Подключение модулей, подготовка к работе и их отключение будут описано отдельно.

Точка входа в программу указывает исполнителю: откуда начинать работу.
<Пример оформления на языке>
Если в исходном коде не будет точки входа, то возникнет ошибка компиляции.

Способы вывода информации:
* в консоль
* в файл
* другие способы
Работа с файлами будет рассмотрена позднее.

Для вывода данных в консоль нужно написать команду:
<Пример оформления вывода в консоль на языке>
Для вывода некоторых символов в консоль, нужно использовать спецсимволы:
* Перенос строки - "\n"
* Двойная кавычка - "\""
* Слеш - "\\"


Переменная это часть памяти, которая хранит значение.
Тип переменной определяет значения, которые она может хранить.
Переменные могут хранить:
* Целые числа
* Дробные числа
* Логические значения (истина или ложь)
* Символы
* Составные типы данных
Объявление переменной - команда, при которой компьютер выделяет память для хранения значения.
<Пример оформления на языке>
Инициализация переменной - команда, при которой компьютер записывает значение в переменную.
<Пример оформления на языке>
С переменными можно работать только когда они объявлены и инициализированы.
При использовании необъявленной переменной возникнет ошибка компиляции.
При использовании неинициализированной переменной возникнет ошибка выполнения.
Среда разработки может предупреждать о таких случаях и оформлять ошибку компиляции.

Решение задачи включает в себя:
* команды на выполнение арифметических действий
* условные конструкции
* циклические конструкции
Условные и циклические конструкции будут рассмотрены позже.

Основной прием решения линейных задач это "вычислить и записать".
<пример оформления на языке>
Этот прием состоит из двух частей:
* арифметические действия и использование функций
* присвоение
<Пример оформления на языке>
Основные арифметические действия это:
* сложение
* вычитание
* умножение
* деление
* нахождение остатка от деления
* преобразование значения переменной в другой тип
При выполнении этих действий, значения используемых переменных не меняются.
Чтобы запомнить результат, нужно использовать команду присвоения.

Математический модуль позволяет использовать функции:
* нахождение квадратного корня
* нахождение синуса и косинуса
Он подключается так:
<пример подготовки модуля на языке>
Он не требует подготовки к работе и действий по отключению.

Способы получения исходных данных:
* явное указание в коде программы
* получение значений из консоли
* получение значений из файла
* другие способы
Условия используются если в программе может быть два варианта развития событий.
На практике условия используются:
* для проверки исходных данных
* При выборе выполняемых действий из двух вариантов

Выбор выполняемых действий пишется в виде:
if (логическое выражение) { //Логическое выражение от которого зависит выбор
	//Первый вариант действий
} else {
	//Второй вариант действий
}

Блок else не обязателен.
if (логическое выражение) { //Логическое выражение от которого зависит выбор
	//Первый вариант действий
}

Логические выражения могут быть либо истинны либо ложны.
Если оно истинно, то выполняется первый вариант действий.
Если оно ложно, то выполняется второй вариант действий.

Простейшее логическое выражение состоит из трех частей:
* Левое выражение
* Оператор сравнения
* Правое выражение
Левое и правое выражение могут быть:
* Числовыми константами
* Переменными
* Арифметическими выражениями
* Вызовами функций
Программа сначала вычислит значения левого и правого выражения, а затем применит оператор сравнения.
Оператор сравнения:
* < 
* > 
* <=
* >=
* == Истинно, если левое равно правому
* != Истинно, если левое не равно правому

Значение логического выражения в скобочках можно инвертировать знаком "!".
Тогда выбор выполняемых действий выглядит вот так:
if (!(логическое выражение)) { //Логическое выражение от которого зависит выбор
	//Второй вариант действий
} else {
	//Первый вариант действий
}
Если выражение ложно, то ложь инвертируется в истину и выполняется второй вариант действий.
Если выражение истинно, то истина инвертируется в ложь и выполняется первый вариант действий.

Guard-выражения (Гвард-выражения) - условная конструкция, которая проверяет исходные данные и завершает работу программы, если они некорректны.
Гвард-выражения помещаются сразу после получения исходных данных.
Пишется в виде:
 if (логическое выражение) {
	 Сообщение об ошибке
	 return;
 }
Если гвард выражение истинно, то работа программы завершается.
 
Условия можно вкладывать одно в другое.
if (логическое выражение 1) {
	// вариант 1
	if (логическое выражение 2) {
		// вариант 1.1 если 1 и 2 выражения - истинны
	} else {
		// вариант 1.2 если 1 выражение - истина, а 2 - ложь
	}
} else {
	// вариант 2
	if (логическое выражение 3) {
		// вариант 2.1. если 1 выражение - ложь, а 2 - истина
	} else {
		// вариант 2.2 если 1 и 2 выражение - ложь
	}
}
Глубина вложенности не ограничена.
Блоки else не обязательны.
Вложенное условие не обзятально включать в оба варианта выполнения.

Логические выражения могут состоять из других логических выражений.
Для вычисления составного логического выражения, нужно применять операторы из дискретной математики.
* && логическое И
* || логическое ИЛИ
Тогда вложенные условия могут выглядеть иначе.
if (ЛВ1 && ЛВ2) {
	// вариант 1.1. если 1 и 2 выражения - истинны
}
if (ЛВ1 && !(ЛВ2)) {
	// вариант 1.2 если 1 выражение - истина, а 2 - ложь
}
if (!(ЛВ1) && ЛВ2) {
	// вариант 2.1 если 1 выражение - ложь, а 2 - истина
}
if (!(ЛВ1) && !(ЛВ2)) {
	// вариант 2.2 если 1 и 2 выражение - ложь
}

Таблица истинности составных логических выражений
ЛВ1	ЛВ2	&&	||
0	0	0	0
0	1	0	1
1	0	0	1
1	1	1	1
package root.tasks.methods;

import root.tasks.LayoutMaker;

public class TaskJs4776 extends LayoutMaker {
    @Override
    protected void makeLayout() {
        appendHeader();
        appendSubheading("Реализуйте функцию для решения задачи " + linkToTask(2790));
        appendOrderedNonEscaped(
                "В файле для исходного кода реализуйте функцию task2790.",
                "В качестве аргументов ей будут передавать 1 число.",
                "В теле функции вычислите результат и верните его."
        );
        appendSubheading("Проверьте корректность работы функции с помощью юнит-теста");
        appendOrderedNonEscaped(
                "В файле с юнит-тестами создайте функцию it. Она уже реализована в Jasmine.",
                "Первый аргумент функции it - описание теста, например \"в задаче 2790 должен получиться корректный результат\".",
                "Второй аргумент функции it - анонимная функция, содержащая код проверки.",
                "В коде проверки объявите переменную actual для хранения действительных чисел.",
                "Вызовите функцию task2790.",
                "Передайте ему в качестве аргументов число 6997",
                "Результат вызова запишите в переменную actual.",
                "Проверьте, что в переменной actual находится ожидаемое значение с помощью функции expect в сочетании с функцией toBeCloseTo.",
                "Вызовите статический функцию AreEqual из класса Assert. Передайте ему первым аргументом число 0.9205, вторым аргументом переменную actual, третьим аргументом число 0.0001",
                "Вызовите статический функцию Task2790 с аргументом 31 и запишите результат в переменную actual.",
                "Вызовите статический  AreEqual из класса Assert. Передайте ему первым аргументом число 0.8572, вторым аргументом переменную actual, третьим аргументом число 0.0001",
                "Добавьте проверку, что метод Task2790 возвращает 0 если его вызвать с аргументом 90."
        );
        appendTaskDescEscaped("После запуска юнит-теста, он должен быть отмечен зеленым знаком.");
        appendFooter();
    }
}

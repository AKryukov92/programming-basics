package root.tasks.objects;

import root.tasks.LayoutMaker;

public class Task7301 extends LayoutMaker {
    @Override
    protected void makeLayout() {
        appendHeader();
        appendSubheading("Реализуйте параметризованный конструктор класса Point");
        appendTaskDesc("Конструктор класса - специальный метод, тело которого выполняется при создании экземпляра класса.");
        appendOrdered(
                "В папке для исходного кода создайте класс Point.",
                "Объявите поля \"x\" и \"y\" для целых чисел.",
                "В классе Point реализуйте конструктор. Это публичный метод, который принимает в качестве аргументов 2 целых числа (\"px\" и \"py\") и называется Point (как класс). У него должно отсутствовать указание типа возвращаемого значения.",
                "В теле конструктора инициализируйте поля \"x\" и \"y\" значениями, которые были переданы в качестве аргументов.",
                "Скорее всего у вас должны появиться ошибки компиляции в других методах. Замените явную инициализацию полей на вызов конструктора."
        );
        appendSubheading("Используйте конструктор в тестовом методе distanceBetweenPointsTest");
        appendOrdered(
                "Вызовите конструктор и передайте ему в качестве аргументов значения -1 и -3.",
                "Результат вызова конструктора запишите в переменную src.",
                "Вызовите конструктор и передайте ему в качестве аргументов значения 2 и 9.",
                "Результат вызова конструктора запишите в переменную dest.",
                "Проверьте, что результат вызова метода distanceBetween с аргументами src и dest вернет значение 12.3693 с точностью 0.0001.",
                "После запуска тестовых методов, все они должны быть отмечены зеленым знаком в списке методов."
        );
        appendFooter();
    }
}
